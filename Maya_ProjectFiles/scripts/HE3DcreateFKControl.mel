global proc makeFKTR ()
{
	// sets up FK controls to a joint chain of any size
	// usage: makeFKTRS (requires makeFK UI)
	
	// capturing variables
	
	$selection = `ls -sl`;
	int $size = `size ($selection)`;
	
	if ($size == 0)
	error "Please select one or more objects to control.";
	
	float $controlSize = `floatSliderGrp -q -v controlSize`;
	$color = `colorIndexSliderGrp -q -v controlColor`;
	$color = $color - 1;
	
    string $controlSuff;
    $controlSuff = `textFieldGrp -q -text controlName`;

	for ($i=0; $i<$size; $i++)
	{
	    if (`objExists ($selection[0]+$controlSuff)` == 1)
	    error "Please enter a unique suffix.";
	}
		
	if ($controlSuff == "")
	error "Please enter a suffix.";
	
		
	for ($i=0; $i<$size; $i++)
		{

		// creating gyro controller object
		$circle1 =`circle -nr 1 0 0 -ch 0`;
		$circleShape1 = `pickWalk -d down`;
		$circle2 =`circle -nr 0 1 0 -ch 0`;
		$circleShape2 = `pickWalk -d down`;
		$circle3 =`circle -nr 0 0 1 -ch 0`;
		$circleShape3 = `pickWalk -d down`;
		
		setAttr ($circleShape1[0] + ".overrideEnabled") 1;
		setAttr ($circleShape2[0] + ".overrideEnabled") 1;
		setAttr ($circleShape3[0] + ".overrideEnabled") 1;
		
		setAttr ($circleShape1[0] + ".overrideColor") $color ;
		setAttr ($circleShape2[0] + ".overrideColor") $color ;
		setAttr ($circleShape3[0] + ".overrideColor") $color ;
		
		parent -shape -r $circleShape3 $circleShape2 $circle1[0];
		delete $circle2[0];
		delete $circle3[0];
		rename $circle1[0] ($selection[$i]+ $controlSuff);
		select ($selection[$i]+ $controlSuff);
		scale -r ($controlSize *.25) ($controlSize *.25) ($controlSize *.25);
		makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;
		
		// creating offset node
		group -em -n ($selection[$i]+"_offset");
		$tempConstraint = `orientConstraint $selection[$i] ($selection[$i]+"_offset")`;
		delete $tempConstraint;
		$tempConstraint = `pointConstraint $selection[$i] ($selection[$i]+"_offset")`;
		delete $tempConstraint;

		parent ($selection[$i]+ $controlSuff) ($selection[$i]+"_offset");
		
		// parenting all subsequent controls to the appropriate parent control
		if ($i>=1)
			parent ($selection[$i]+"_offset")  ($selection[$i-1]+$controlSuff);
		
		// setting attributes to zero
		setAttr ($selection[$i]+ $controlSuff+".tx") 0;
		setAttr ($selection[$i]+ $controlSuff+".ty") 0;
		setAttr ($selection[$i]+ $controlSuff+".tz") 0;
		
		setAttr ($selection[$i]+ $controlSuff+".rx") 0;
		setAttr ($selection[$i]+ $controlSuff+".ry") 0;
		setAttr ($selection[$i]+ $controlSuff+".rz") 0;
		
		// connecting FK controls directly to joint rotations
		parentConstraint -mo ($selection[$i]+ $controlSuff) ($selection[$i])  ;
		
	
		}
		
		
		// constraining control hierarchy to parent joint (if it exists)
		
		// parent check
		string $selectionParent = "noParent";
		
		for ($i=0;$i<$size;$i++)
		{
		$parent = `listRelatives -parent $selection[$i]`;
		if (`size($parent)` > 0)
		    {
		        string $parentCheck = $parent[0];
		        $check = stringArrayContains($parentCheck, $selection);
		        if ($check == 0)
		        $selectionParent = $parentCheck;
		    }
		
		}
		
        if ($selectionParent != "noParent")
		    parentConstraint -mo $selectionParent ($selection[0]+"_offset");

}




global proc createFKControls()
{
    // by Jason Baskin
    // jason@jasonbaskin.com
        
    // Creates FK Controls for one or more selected objects
    // User may choose a custom control name if a single object is selected
    // Multiple objects must belong to a hierarchy
    // Controls will be created with the "_CTRL" suffix appended to the object name
    // Control size can be modified using the slider
    

	if (`window -exists makeFKWindow`)
	deleteUI makeFKWindow;

	string $text;

	$sel = `ls -sl`;	
    	if (`size ($sel)` >= 1)
    	
    	$text = $sel[0];
    
    	window -title "Create FK Controls" makeFKWindow;
    	columnLayout -adj true makeFKColumn ;
    
    
    
    	floatSliderGrp 
    	-label "Control Size" 
    	-field true
    	-cw 1  80
    	-cw 2  40
    	-cw 3 150
        -minValue .01 
    	-maxValue 50.0
        -fieldMinValue .1 
    	-fieldMaxValue 50
        -value 2
    	controlSize;
    	
    	colorIndexSliderGrp 
    	-cw 1  80
    	-cw 2  40
    	-label "Control Color" 
    	-min 0 
    	-max 31 
    	-value 5
    	controlColor;
    
        textFieldGrp
    	-cw 1  80
    	-cw 2 200
        -label "Control Suffix"
        -text  ("_CTRL")
    	controlName;
    

    	button
    	-label "CREATE CONTROL"
    	-command "makeFKTR"
    	createFKButton;
    	
    	$originalSelection = `ls -sl`;
    
        
        select -r $originalSelection;
    
        
    	showWindow makeFKWindow;
    	window -edit -wh 310 90 makeFKWindow;
    	
    	if (`size($sel)` >= 1)
        textFieldGrp -e -text "_CTRL" -editable true controlName;
	
}
createFKControls;

