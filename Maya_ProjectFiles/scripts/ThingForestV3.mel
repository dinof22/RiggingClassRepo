//THing Forest!

//Instructions: Select a thing and make a random forest with it

//this declares the ThingForest tool...
string $thingForest;


//this prevents the duplication of the window...
if (`window -ex $thingForest`){
    deleteUI -window $thingForest;
}

string $thingForest = `window -t "Thing Forest" -s 0 -wh 300 225`;
columnLayout -adj true;
text -l "Instruction: Click the button to Align the Objects how you want";
button -l "Make Forest!!" -w 100 -h 50 -c "intFieldValue";   ////makeForest(`intFieldValue(_totalThings)`,`intFieldValue(_randomRangeX)`,`intFieldValue(_randomRangeZ)`)
button -l "Randomize Size" -w 100 -h 50 -c "randomizeSize";
intField _totalThings;
intField _randomRangeX;  //will be input into rand range for move x
intField _randomRangeZ;  //will be input into rand range for move z
showWindow $thingForest; 

//int $totalThings = `intField -q -v _totalThings`;
//int $randomRangeX = `intField -q -v _randomRangeX`;
//int $randomRangeZ = `intField -q -v _randomRangeZ`;

proc intFieldValue(){
   // int $value = `intField -q -v $control`;
   // return $value;
   int $totalThings = `intField -q -v _totalThings`;
   int $randomRangeX = `intField -q -v _randomRangeX`;
   int $randomRangeZ = `intField -q -v _randomRangeZ`;
   makeForest($totalThings, $randomRangeX, $randomRangeZ);
}



proc makeForest(int $totalThings, int $randomRangeX, int $randomRangeZ){
    int $i;

//int $totalThings = rand (10,40);
//float $thingPlacementX = rand(-30,30);

for ($i = 0; $i < $totalThings; $i++){
    float $thingSize = rand(1,3);
    duplicate -rr;
    move -r (rand((-($randomRangeX)),($randomRangeX))) (0) (rand((-($randomRangeZ)),($randomRangeZ))) ;
    rotate  (rand(-15,15)) (rand(0,360)) (0) ;
    scale $thingSize $thingSize $thingSize ;
    }

}

proc randomizeSize(){
    string $selection[] = `ls -sl`;
    for ($each in $selection){
        float $randomScale = rand(1,3);
        scale $randomScale $randomScale $randomScale $each ;
    }
}

//run function check
//makeForest(40, 5, 40);
