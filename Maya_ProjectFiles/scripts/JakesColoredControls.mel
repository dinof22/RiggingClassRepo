//colored control creator
global proc colorControlUI(){

    //renamer ui window
    string $ccWindow = "colorControlWindow";
    if(`window -exists $ccWindow` == true){
        deleteUI -window $ccWindow;
    }
    $ccWindow = `window -title "Control Creator" -sizeable 0 $ccWindow`;


    //column
    string $ccColumn = `columnLayout -adjustableColumn 1 -columnAttach "both" 2 -parent $ccWindow`;
    //buttons & Inputs 
    string $Circle = `button -parent $ccColumn -label "Circle"`;
	string $Diamond = `button -parent $ccColumn -label "Diamond"`;
	string $Flower = `button -parent $ccColumn -label "Flower"`;
	string $tempColor = `intFieldGrp -parent $ccColumn -label "Color Index:" -extraLabel "Enter number for a color value"`;

    //button throws values into other function as paramaters
    button -e -command ("CreateCtrls(\"" + $tempColor + "\")") $Circle;
	button -e -command ("createDiamondCtrl(\"" + $tempColor + "\")") $Diamond;
	button -e -command ("createFlowerCtrl(\"" + $tempColor + "\")") $Flower;

    window -e -width 400 -height 125 $ccWindow;
	showWindow($ccWindow);
}





/*
global proc GetColorValue(string $btempColor){
   int $color = `intFieldGrp -q -value1 $btempColor`;
   ThingRenamer($prefix, $totalDigits, $suffix, $startingNum);
}
*/




global proc CreateCtrls(string $btempColor)
{
	//gets color value
	int $color = `intFieldGrp -q -value1 $btempColor`;
	//items selected
	string $selection[] = `ls -sl`;
	
	//var for the size of the selection
	int $size = `size ($selection)`;
	int $i;
	string $ctrls[];
	
	if ($size == 0)
	{
		$selection[0] = "Orphan";
		$size = 1;
	}
    
    for ($i=0; $i<$size; $i++){
	
		//creates array for control curves and names it to the first item in the selection array
        string $tempCtrlArray[] = `circle -name ($selection[$i]+"_Ctrl")`;
		$ctrls[$i] = $tempCtrlArray[0];
		
		//creates array for control group and adds _grp to the name;
		string $ctrlGrp = `group -n ($ctrls[$i]+"_Grp") ($ctrls[$i])`;
		
		
		//matches transform of ctrlGrp in selection to item in seleciton
		matchTransform $ctrlGrp $selection[$i];
		
		//colors controls
        ColorControls($ctrls[$i], $color);
		
    }

}

//create diamond control
global proc createDiamondCtrl(string $btempColor)
{
	//gets color value
	int $color = `intFieldGrp -q -value1 $btempColor`;
		//items selected
	string $selection[] = `ls -sl`;
	
	//var for the size of the selection
	int $size = `size ($selection)`;
	int $i;
	string $ctrls[];
	
	if ($size == 0)
	{
		$selection[0] = "Orphan";
		$size = 1;
	}
    
    for ($i=0; $i<$size; $i++){
	
		//creates array for control curves and names it to the first item in the selection array
        string $tempCtrlArray[] = createDiamondShape($selection[$i]);
		$ctrls[$i] = $tempCtrlArray[0];
		
		//creates array for control group and adds _grp to the name;
		string $ctrlGrp = `group -n ($ctrls[$i]+"_Grp") ($ctrls[$i])`;
		
		
		//matches transform of ctrlGrp in selection to item in seleciton
		matchTransform $ctrlGrp $selection[$i];
		
		//colors controls
        ColorControls($ctrls[$i], $color);
		
    }
}


//create flower controls
global proc createFlowerCtrl(string $btempColor)
{
	//gets color value
	int $color = `intFieldGrp -q -value1 $btempColor`;
			//items selected
	string $selection[] = `ls -sl`;
	
	//var for the size of the selection
	int $size = `size ($selection)`;
	int $i;
	string $ctrls[];
	
	if ($size == 0)
	{
		$selection[0] = "Orphan";
		$size = 1;
	}
    
    for ($i=0; $i<$size; $i++){
	
		//creates array for control curves and names it to the first item in the selection array
        string $tempCtrlArray[] = createFlowerShape($selection[$i]);
		$ctrls[$i] = $tempCtrlArray[0];
		
		//creates array for control group and adds _grp to the name;
		string $ctrlGrp = `group -n ($ctrls[$i]+"_Grp") ($ctrls[$i])`;
		
		
		//matches transform of ctrlGrp in selection to item in seleciton
		matchTransform $ctrlGrp $selection[$i];
		
		//colors controls
        ColorControls($ctrls[$i], $color);
		
    }
}


global proc ColorControls(string $ctrl, int $color)
{
    // Sets color index of the control
    
    //define string array for shapes
    string $shapes[];
    
    //find the shape node[s] of $ctrl
    $shapes = `listRelatives -shapes $ctrl`;
    
    for ($shape in $shapes)
    {
        //check for nurbsCurve
        if (`nodeType $shape` == "nurbsCurve")
        {
            //enable override on $shape
            setAttr ($shape + ".overrideEnabled") 1;
            
            //set $shape color to $color
            setAttr ($shape + ".overrideColor") $color;
        } 
        else 
        {
            warning("Selected object is not a curve.");
        }
    }
}


/*
global proc string[] createFlowerShape(){

string $Flower[] = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`;
select -r ($Flower[0] + ".cv[0]") ($Flower[0] + ".cv[6]") ;
select -tgl ($Flower[0] + ".cv[4]") ;
select -tgl ($Flower[0] + ".cv[2]") ($Flower[0] + ".cv[4]") ;
select -cl  ;
select -r ($Flower[0] + ".cv[2]") ;
select -tgl ($Flower[0] + ".cv[4]")
select -tgl ($Flower[0] + ".cv[6]")
select -tgl ($Flower[0] + ".cv[0]") ;
scale -ws -r -p 0cm 0cm 0cm -0.274738 -0.274738 -0.274738 ;

return $Flower;
}
*/


//create the flower shape
global proc string[] createFlowerShape(string $nameOfCtrl){

string $Flower[] = `circle -name ($nameOfCtrl +"_Ctrl") -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`;
select -tgl ($Flower[0] + ".cv[0]") ;
select -tgl ($Flower[0] + ".cv[6]");
select -tgl ($Flower[0] + ".cv[4]");
select -tgl ($Flower[0] + ".cv[2]");
scale -ws -r -p 0cm 0cm 0cm -0.4 -0.4 -0.4 ;

return $Flower;
}

//create the diamond shape
global proc string[] createDiamondShape(string $nameOfCtrl){

string $Diamond[] = `circle -name ($nameOfCtrl +"_Ctrl") -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`;
select -tgl ($Diamond[0] + ".cv[0]") ;
select -tgl ($Diamond[0] + ".cv[6]");
select -tgl ($Diamond[0] + ".cv[4]");
select -tgl ($Diamond[0] + ".cv[2]");
scale -ws -r -p 0cm 0cm 0cm 3.7 3.7 3.7 ;
select -cl  ;
select -r $Diamond[0];
scale -ws -r 0.45 0.45 0.45 ;
DeleteHistory;
return $Diamond;
}

